// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Duties {
  id          String        @id @default(uuid())
  description String?
  date        DateTime
  duration    Int
  group_id    String
  group       Groups        @relation(fields: [group_id], references: [id])
  usersOnDuty UsersOnDuty[]
}

model UsersOnDuty {
  id      String  @id @default(uuid())
  user_id String
  duty_id String
  role    String?
  user    Users   @relation(fields: [user_id], references: [id])
  duty    Duties  @relation(fields: [duty_id], references: [id])
}

model Users {
  id             String          @id @default(uuid())
  name           String
  nickname       String
  email          String          @unique
  cpf            String          @unique
  profession     String
  specialization String
  phone          String          @unique
  password       String
  city           String
  state          String
  created_at     DateTime        @default(now())
  updated_at     DateTime        @default(now())
  subscriptions  Subscriptions[]
  super_groups   Groups[]        @relation("SuperAdm")
  user_groups    Groups[]        @relation("GroupUsers")
  adm_groups     Groups[]        @relation("GroupAdmins")
  invited_groups Groups[]        @relation("InvitedUsers")
  invited_adms   Groups[]        @relation("InvitedAdms")
  duties         UsersOnDuty[]
}

model Groups {
  id             String          @id @default(uuid())
  subscription   Subscriptions?
  super_adm_id   String
  super_adm      Users           @relation("SuperAdm", fields: [super_adm_id], references: [id])
  users          Users[]         @relation("GroupUsers")
  adms           Users[]         @relation("GroupAdmins")
  invited_users  Users[]         @relation("InvitedUsers")
  invited_adms   Users[]         @relation("InvitedAdms")
  invited_emails InvitedEmails[] @relation("GroupInvitedEmails")
  name           String
  description    String
  created_at     DateTime        @default(now())
  updated_at     DateTime        @default(now())
  duties         Duties[]
}

model InvitedEmails {
  id       String @id @default(uuid())
  email    String
  group_id String
  group    Groups @relation("GroupInvitedEmails", fields: [group_id], references: [id])
}

model Plans {
  id            String          @id @default(uuid())
  subscriptions Subscriptions[]
  name          String
  price         Float
  max_users     Int
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now())
}

model Subscriptions {
  id         String   @id @default(uuid())
  plan_id    String
  plan       Plans    @relation(fields: [plan_id], references: [id])
  user_id    String
  user       Users    @relation(fields: [user_id], references: [id])
  group      Groups?  @relation(fields: [group_id], references: [id])
  group_id   String?  @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}